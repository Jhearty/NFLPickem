// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Player {
  id                      String    @id @default(cuid())
  name                    String?
  email                   String?   @unique
  password                String?
  picks                   Pick[]    @relation("Pick_player")
  passwordResetToken      String?
  passwordResetIssuedAt   DateTime?
  passwordResetRedeemedAt DateTime?
}

model Team {
  id                 String  @id @default(cuid())
  name               String?
  city               String?
  abbreviation       String?
  conference         String?
  division           String?
  from_Game_homeTeam Game[]  @relation("Game_homeTeam")
  from_Game_awayTeam Game[]  @relation("Game_awayTeam")
  from_Game_winner   Game[]  @relation("Game_winner")
  from_Pick_picked   Pick[]  @relation("Pick_picked")
}

model Game {
  id         String    @id @default(cuid())
  season     String?
  slug       String?
  week       Week?     @relation("Game_week", fields: [weekId], references: [id])
  weekId     String?   @map("week")
  spread     Float?
  homeTeam   Team?     @relation("Game_homeTeam", fields: [homeTeamId], references: [id])
  homeTeamId String?   @map("homeTeam")
  awayTeam   Team?     @relation("Game_awayTeam", fields: [awayTeamId], references: [id])
  awayTeamId String?   @map("awayTeam")
  winner     Team?     @relation("Game_winner", fields: [winnerId], references: [id])
  winnerId   String?   @map("winner")
  picks      Pick[]    @relation("Pick_game")
  createdAt  DateTime?

  @@index([weekId])
  @@index([homeTeamId])
  @@index([awayTeamId])
  @@index([winnerId])
}

model Pick {
  id        String   @id @default(cuid())
  player    Player?  @relation("Pick_player", fields: [playerId], references: [id])
  playerId  String?  @map("player")
  game      Game?    @relation("Pick_game", fields: [gameId], references: [id])
  gameId    String?  @map("game")
  picked    Team?    @relation("Pick_picked", fields: [pickedId], references: [id])
  pickedId  String?  @map("picked")
  isCorrect Boolean?

  @@index([playerId])
  @@index([gameId])
  @@index([pickedId])
}

model Week {
  id        String    @id @default(cuid())
  label     String?
  slug      String?
  season    String?
  games     Game[]    @relation("Game_week")
  createdAt DateTime?
}